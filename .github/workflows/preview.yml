name: Preview Deployment

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to deploy preview for'
        required: true
        type: string

env:
  NODE_VERSION: '20'

jobs:
  build-preview:
    name: Build Preview Application
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      deployments: write
      
    outputs:
      preview_url: ${{ steps.deploy-preview.outputs.preview_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci

    - name: Set preview environment variables
      run: |
        echo "🔧 Setting preview environment variables..."
        
        # Set environment variables for preview deployment
        echo "NEXT_PUBLIC_API_BASE_URL=https://api-dev.idynic.com" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_AUTH_BASE_URL=https://auth-dev.atriumn.com" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_MCP_BASE_URL=https://mcp-dev.idynic.com" >> $GITHUB_ENV
        
        # Add PR-specific environment variables
        pr_number="${{ github.event.pull_request.number || github.event.inputs.pr_number }}"
        echo "NEXT_PUBLIC_PREVIEW_MODE=true" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_PR_NUMBER=$pr_number" >> $GITHUB_ENV

    - name: Run tests before preview build
      run: |
        echo "🧪 Running tests before preview build..."
        npm run test

    - name: Build preview application
      run: |
        echo "🏗️ Building preview application..."
        npm run build

    - name: Deploy preview
      id: deploy-preview
      run: |
        echo "🚀 Deploying preview application..."
        
        pr_number="${{ github.event.pull_request.number || github.event.inputs.pr_number }}"
        
        # This is a placeholder for actual preview deployment
        # Replace with your preview deployment mechanism (Vercel, Netlify, etc.)
        
        # For demonstration, we'll simulate a preview deployment
        preview_url="https://pr-${pr_number}.preview.idynic.com"
        
        echo "Preview deployment URL: $preview_url"
        echo "preview_url=$preview_url" >> $GITHUB_OUTPUT
        
        # Simulate deployment process
        echo "Setting up preview environment..."
        echo "Uploading build artifacts..."
        echo "Configuring environment variables..."
        echo "Starting preview server..."
        
        echo "✅ Preview deployment completed"

    - name: Run preview validation
      run: |
        echo "🔍 Validating preview deployment..."
        
        # Add preview-specific validation
        preview_url="${{ steps.deploy-preview.outputs.preview_url }}"
        
        # Basic validation checks
        echo "Checking if preview URL is accessible..."
        # curl -f "$preview_url" || echo "⚠️ Preview URL not accessible"
        
        echo "Checking build artifacts..."
        if [ -d ".next" ]; then
          echo "✅ Next.js build artifacts found"
        else
          echo "❌ Next.js build artifacts missing"
        fi
        
        echo "✅ Preview validation completed"

    - name: Comment on PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.deploy-preview.outputs.preview_url }}';
          const prNumber = context.issue.number;
          
          const body = `## 🚀 Preview Deployment
          
          Your preview deployment is ready! 
          
          **📱 Preview URL:** ${previewUrl}
          
          ### 📊 Deployment Details
          - **Commit:** \`${{ github.event.pull_request.head.sha }}\`
          - **Build Time:** \`$(date)\`
          - **Environment:** Preview
          
          ### 🔍 What to Test
          - [ ] All pages load correctly
          - [ ] Authentication flow works
          - [ ] Core functionality is intact
          - [ ] Responsive design on mobile
          - [ ] No console errors
          
          ### 🔗 Useful Links
          - [Preview App](${previewUrl})
          - [Build Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          ---
          *This preview will be automatically updated when you push new commits to this PR.*`;
          
          // Find existing preview comment
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          
          const existingComment = comments.data.find(comment => 
            comment.body.includes('🚀 Preview Deployment')
          );
          
          if (existingComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: body
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: body
            });
          }

    - name: Generate preview report
      if: always()
      run: |
        echo "# 🚀 Preview Deployment Report" > preview-report.md
        echo "" >> preview-report.md
        echo "**PR Number:** ${{ github.event.pull_request.number || github.event.inputs.pr_number }}" >> preview-report.md
        echo "**Preview URL:** ${{ steps.deploy-preview.outputs.preview_url }}" >> preview-report.md
        echo "**Commit:** ${{ github.event.pull_request.head.sha || github.sha }}" >> preview-report.md
        echo "**Deployed by:** ${{ github.actor }}" >> preview-report.md
        echo "**Timestamp:** $(date)" >> preview-report.md
        echo "" >> preview-report.md
        
        echo "## 📋 Deployment Steps" >> preview-report.md
        echo "" >> preview-report.md
        echo "- ✅ Dependencies installed" >> preview-report.md
        echo "- ✅ Tests executed" >> preview-report.md
        echo "- ✅ Preview build completed" >> preview-report.md
        echo "- ✅ Preview deployed" >> preview-report.md
        echo "- ✅ Validation completed" >> preview-report.md
        
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "- ✅ PR comment updated" >> preview-report.md
        fi
        
        echo "" >> preview-report.md
        echo "## 🔧 Build Configuration" >> preview-report.md
        echo "" >> preview-report.md
        echo "- **Node.js Version:** ${{ env.NODE_VERSION }}" >> preview-report.md
        echo "- **Environment:** Preview" >> preview-report.md
        echo "- **Build Output:** Static" >> preview-report.md
        echo "" >> preview-report.md
        echo "## 🔗 Links" >> preview-report.md
        echo "" >> preview-report.md
        echo "- [Preview Application](${{ steps.deploy-preview.outputs.preview_url }})" >> preview-report.md
        echo "- [Repository](https://github.com/${{ github.repository }})" >> preview-report.md
        
        cat preview-report.md

    - name: Upload preview artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: preview-deployment-pr-${{ github.event.pull_request.number || github.event.inputs.pr_number }}
        path: |
          .next/
          preview-report.md
        retention-days: 14

  cleanup-old-previews:
    name: Cleanup Old Preview Deployments
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    
    permissions:
      contents: read
      deployments: write
      
    steps:
    - name: Cleanup preview deployment
      run: |
        echo "🧹 Cleaning up preview deployment for closed PR..."
        
        pr_number="${{ github.event.pull_request.number }}"
        preview_url="https://pr-${pr_number}.preview.idynic.com"
        
        echo "Removing preview deployment: $preview_url"
        
        # Add cleanup logic here
        # This would typically involve:
        # - Removing the preview deployment
        # - Cleaning up associated resources
        # - Updating deployment status
        
        echo "✅ Preview cleanup completed"

    - name: Comment on PR about cleanup
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.issue.number;
          
          const body = `## 🧹 Preview Cleanup
          
          The preview deployment for this PR has been automatically cleaned up.
          
          Thank you for your contribution! 🎉`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: body
          });